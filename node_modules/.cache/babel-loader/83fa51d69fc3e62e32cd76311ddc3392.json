{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const appSlice = createSlice({\n  name: \"app\",\n  initialState: {\n    channelId: null,\n    channelName: null\n  },\n  reducers: {\n    setChannelInfo: (state, action) => {\n      state.channelId = action.payload.channelId;\n      state.channelName = action.payload.channelName;\n    }\n  }\n});\nexport const {\n  setChannelInfo\n} = appSlice.actions;\nexport const selectChannelId = state => state.app.channelId;\nexport const selectChannelName = state => state.app.channelName;\nexport default appSlice.reducer;","map":{"version":3,"names":["createSlice","appSlice","name","initialState","channelId","channelName","reducers","setChannelInfo","state","action","payload","actions","selectChannelId","app","selectChannelName","reducer"],"sources":["/home/ekansh/Documents/discord/src/features/appSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const appSlice = createSlice({\n  name: \"app\",\n  initialState: {\n    channelId: null,\n    channelName: null,\n  },\n  reducers: {\n    setChannelInfo: (state, action) => {\n      state.channelId = action.payload.channelId;\n      state.channelName = action.payload.channelName;\n    },\n  },\n});\n\nexport const { setChannelInfo } = appSlice.actions;\nexport const selectChannelId = (state) => state.app.channelId;\nexport const selectChannelName = (state) => state.app.channelName;\n\nexport default appSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAGD,WAAW,CAAC;EAClCE,IAAI,EAAE,KAD4B;EAElCC,YAAY,EAAE;IACZC,SAAS,EAAE,IADC;IAEZC,WAAW,EAAE;EAFD,CAFoB;EAMlCC,QAAQ,EAAE;IACRC,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACjCD,KAAK,CAACJ,SAAN,GAAkBK,MAAM,CAACC,OAAP,CAAeN,SAAjC;MACAI,KAAK,CAACH,WAAN,GAAoBI,MAAM,CAACC,OAAP,CAAeL,WAAnC;IACD;EAJO;AANwB,CAAD,CAA5B;AAcP,OAAO,MAAM;EAAEE;AAAF,IAAqBN,QAAQ,CAACU,OAApC;AACP,OAAO,MAAMC,eAAe,GAAIJ,KAAD,IAAWA,KAAK,CAACK,GAAN,CAAUT,SAA7C;AACP,OAAO,MAAMU,iBAAiB,GAAIN,KAAD,IAAWA,KAAK,CAACK,GAAN,CAAUR,WAA/C;AAEP,eAAeJ,QAAQ,CAACc,OAAxB"},"metadata":{},"sourceType":"module"}